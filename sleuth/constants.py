# -------------- Constants --------------
# NOTE: Please do not edit this file some
# of the constants here are important to
# stay unchaged.

import os

# Sleuth info
PACKAGE_NAME =  "sleuth"
DESCRIPTION  =  "open-source OSINT tool to track down IPs and gather info about them."
VERSION      =  "0.1.0"
AUTHOR       =  "ramsy0dev"
GITHUB       =  "https://github.com/ramsy0dev/sleuth"

# Sleuth's banner
BANNER = f"""
\t[bold red] ___  [bold cyan] _             _    _
\t[bold red]/ __> [bold cyan]| | ___  _ _ _| |_ | |_
\t[bold red]\__ \ [bold cyan]| |/ ._>| | | | |  | . |
\t[bold red]<___/ [bold cyan]|_|\___.`___| |_|  |_|_|
\t\t [bold yellow] Made by [bold green]`{AUTHOR}`
     [bold violet]-- [bold red]S[bold cyan]leuth [bold violet]-- [bold red]`[bold italic white]If it's [bold italic green]smart[bold italic white], it's [bold italic red]vulnerable[bold red]`
"""

# Default config data
HOME = os.path.expanduser("~")
SLEUTH_CONFIG_PATH = f"{HOME}/.config/sleuth/config.yaml"
DEFAULT_SQLITE_PATH = f"{HOME}/.config/sleuth/sleuth.db"
SLEUTH_CONFIG = lambda vpn_api_key, database_type, sqlite_file_path, username, password, host, port, database_name, enable_database_save: f"""# This an auto generated config by Sleuth please
# do not change any thing unless you know what
# you are doing
# ------------------ Sleuth --------------------
# Author: {AUTHOR}
# Github: {GITHUB}
# ----------------------------------------------

enable_database_save: {enable_database_save}

database:
 - database_type: {database_type} # support only both ['SQLite', 'PostgreSQL']
 - sqlite_file_path: {sqlite_file_path} # `database.db` file path
 - username: {username} # For 'PostgreSQL'
 - password: {password} # For 'PostgreSQL'
 - host: {host} # for 'PostgreSQL'
 - port: {port} # for 'PostgreSQL'
 - database_name: {database_name} # For 'PostgreSQL'

vpn_api_key: {vpn_api_key} # vpnapi.io
"""

# Services
IP_API = lambda ip: f"http://ip-api.com/json/{ip}?fields=status,message,continent,continentCode,country,countryCode,region,regionName,city,district,zip,lat,lon,timezone,offset,currency,isp,org,as,asname,reverse,mobile,proxy,hosting,query"
VPN_API = lambda ip, api_key: f"https://vpnapi.io/api/{ip}?key={api_key}"

# Banned IPs
BANNED_IPs_REGEX = [
    r"^(localhost|127\.0\.0\.1)$" # localhost/127.0.0.1
]
VALID_IP_REGEX = r"^(\d{1,3}\.){3}\d{1,3}$"
